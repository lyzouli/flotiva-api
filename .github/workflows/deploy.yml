name: Deploy to Production

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-production
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}     # on passe la PRIVÉE directement
          script_stop: true
          command_timeout: "20m"
          debug: true
          script: |
            set -euo pipefail

            REMOTE_PATH="${{ secrets.REMOTE_PATH }}"

            echo "➡️  Vérif chemin distant"
            echo "REMOTE_PATH='${REMOTE_PATH}'"
            ls -ld -- "${REMOTE_PATH}" || true

            echo "➡️  Aller dans le dossier"
            cd -- "${REMOTE_PATH}" || { echo "❌ cd a échoué"; exit 1; }
            echo "whoami=$(whoami)  pwd=$(pwd)"
            ls -la || true

                        echo "➡️  Test accès GitHub depuis le serveur"
            ssh -T git@github.com || true
            GIT_SSH_COMMAND="ssh -v" git ls-remote git@github.com:${{ github.repository }}.git HEAD

            echo "➡️  Récupération du code (robuste)"
            set -x
            git --version
            git remote -v || true
            git status || true
            git rev-parse --abbrev-ref HEAD || true

            # S'assurer du remote SSH correct
            if git remote get-url origin >/dev/null 2>&1; then
              git remote set-url origin git@github.com:${{ github.repository }}.git
            else
              git remote add origin git@github.com:${{ github.repository }}.git
            fi

            # Fetch (verbeux) + prune
            GIT_SSH_COMMAND="ssh -v" git fetch --prune origin

            # Créer/forcer la branche main à suivre origin/main
            git checkout -B main origin/main

            # Aligner le working tree sur la révision distante
            git reset --hard origin/main
            set +x

            echo "➡️  Dépendances (prod)"
            ${{ secrets.COMPOSER_BIN }} install --no-dev --prefer-dist --no-interaction --optimize-autoloader

            echo "➡️  Nettoyage caches"
            ${{ secrets.PHP_CMD }} artisan config:clear || true
            ${{ secrets.PHP_CMD }} artisan route:clear || true
            ${{ secrets.PHP_CMD }} artisan view:clear || true

            echo "➡️  Reconstruction caches"
            ${{ secrets.PHP_CMD }} artisan config:cache
            ${{ secrets.PHP_CMD }} artisan route:cache
            ${{ secrets.PHP_CMD }} artisan view:cache

            echo "➡️  Migrations"
            ${{ secrets.PHP_CMD }} artisan migrate --force

            echo "➡️  Liens & queues"
            ${{ secrets.PHP_CMD }} artisan storage:link || true
            ${{ secrets.PHP_CMD }} artisan queue:restart || true

            echo "➡️  Permissions"
            chgrp -R www-data storage bootstrap/cache || true
            chmod -R ug+rwx storage bootstrap/cache || true

            echo "✅ Déploiement terminé"
