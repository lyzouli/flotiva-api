name: Deploy to Production

on:
  push:
    branches: ["main"]        # déploie à chaque push sur main
  workflow_dispatch:          # et déclenchement manuel possible

concurrency:
  group: deploy-production
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout (for metadata only)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}        # ex: 203.0.113.10
          username: ${{ secrets.SSH_USER }}    # ex: deploy (recommandé)
          port: ${{ secrets.SSH_PORT }}        # ex: 22
          key: ${{ secrets.SSH_KEY }}          # clé PRIVÉE OpenSSH correspondant à authorized_keys du serveur
          script_stop: true
          command_timeout: "20m"
          debug: true
          envs: |
            REMOTE_PATH=${{ secrets.REMOTE_PATH }}
            PHP_CMD=${{ secrets.PHP_CMD }}
            COMPOSER_BIN=${{ secrets.COMPOSER_BIN }}
            GIT_BRANCH=${{ secrets.GIT_BRANCH }}
            PHP_FPM_SERVICE=${{ secrets.PHP_FPM_SERVICE }}
          script: |
            set -euo pipefail
            umask 002

            # ---------- Config & defaults ----------
            : "${REMOTE_PATH:?REMOTE_PATH secret requis}"
            PHP_CMD="${PHP_CMD:-php}"
            COMPOSER_BIN="${COMPOSER_BIN:-composer}"
            GIT_BRANCH="${GIT_BRANCH:-main}"
            PHP_FPM_SERVICE="${PHP_FPM_SERVICE:-php8.3-fpm}"

            echo "➡️  Cibles:"
            echo "  - path:  ${REMOTE_PATH}"
            echo "  - php:   ${PHP_CMD}"
            echo "  - comp:  ${COMPOSER_BIN}"
            echo "  - branch:${GIT_BRANCH}"
            echo "  - fpm:   ${PHP_FPM_SERVICE}"

            # ---------- Préparation Git ----------
            cd -- "${REMOTE_PATH}"
            echo "➡️  whoami=$(whoami)  pwd=$(pwd)"

            # Prévenir les warnings 'dubious ownership'
            git config --global --add safe.directory "${REMOTE_PATH}" || true

            # Éviter prompt host-key pour github.com (si le home du user est vierge)
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
            if ! grep -q "github.com" ~/.ssh/known_hosts 2>/dev/null; then
              ssh-keyscan -H github.com >> ~/.ssh/known_hosts 2>/dev/null || true
            fi
            chmod 600 ~/.ssh/known_hosts || true

            echo "➡️  Fetch/reset sur ${GIT_BRANCH}"
            set -x
            git fetch --prune origin
            git checkout -B "${GIT_BRANCH}" "origin/${GIT_BRANCH}"
            git reset --hard "origin/${GIT_BRANCH}"
            set +x

            # ---------- Maintenance ON ----------
            echo "➡️  Maintenance ON"
            ${PHP_CMD} artisan down --render="errors::503" || true

            # ---------- Composer install ----------
            # IMPORTANT: on installe selon composer.lock (commit le lock !)
            echo "➡️  Composer install (prod)"
            ${COMPOSER_BIN} install --no-dev --prefer-dist --no-interaction --optimize-autoloader

            # ---------- Migrations DB ----------
            echo "➡️  Migrate --force"
            ${PHP_CMD} artisan migrate --force

            # ---------- Caches ----------
            echo "➡️  Clear caches"
            ${PHP_CMD} artisan config:clear || true
            ${PHP_CMD} artisan route:clear  || true
            ${PHP_CMD} artisan view:clear   || true

            echo "➡️  Rebuild caches"
            ${PHP_CMD} artisan config:cache
            ${PHP_CMD} artisan route:cache
            ${PHP_CMD} artisan view:cache

            # ---------- Liens & queues ----------
            echo "➡️  Storage link & queues"
            ${PHP_CMD} artisan storage:link    || true
            ${PHP_CMD} artisan queue:restart   || true
            ${PHP_CMD} artisan horizon:terminate || true  # si Horizon est utilisé

            # ---------- Permissions ----------
            echo "➡️  Fix permissions"
            mkdir -p storage/framework/{cache,views,sessions}
            chgrp -R www-data storage bootstrap/cache || true
            chmod -R ug+rwx storage bootstrap/cache   || true

            # ---------- Maintenance OFF ----------
            echo "➡️  Maintenance OFF"
            ${PHP_CMD} artisan up

            # ---------- Reload FPM ----------
            echo "➡️  Reload PHP-FPM"
            sudo systemctl reload "${PHP_FPM_SERVICE}" || true

            echo "✅ Déploiement terminé"
