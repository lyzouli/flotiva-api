name: Deploy to Production

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-production
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Pre-flight | Verify secrets
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
          PHP_CMD: ${{ secrets.PHP_CMD }}
          COMPOSER_BIN: ${{ secrets.COMPOSER_BIN }}
        run: |
          set -euo pipefail

          missing=()
          for var in SSH_HOST SSH_USER SSH_PORT SSH_KEY REMOTE_PATH PHP_CMD COMPOSER_BIN; do
            if [ -z "${!var:-}" ]; then
              missing+=("$var")
            fi
          done

          if [ ${#missing[@]} -ne 0 ]; then
            printf '❌ Missing secret(s): %s\n' "${missing[*]}"
            exit 1
          fi

          echo "✅ Secrets look present"

      - name: Prepare SSH key file (preserve newlines)
        id: keyfile
        run: |
          set -euo pipefail
          KEY_PATH="$RUNNER_TEMP/gha_deploy_key"
          umask 177
          cat >"$KEY_PATH" <<'EOF'
${{ secrets.SSH_KEY }}
EOF
          # print fingerprint to confirm the key parsed OK
          ssh-keygen -lf "$KEY_PATH" || { echo "❌ Invalid key format"; exit 1; }
          echo "key_path=$KEY_PATH" >> "$GITHUB_OUTPUT"

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key_path: ${{ steps.keyfile.outputs.key_path }}
          script_stop: true
          debug: true
          script: |
            set -euo pipefail

            echo "➡️  cd to project"
            cd ${{ secrets.REMOTE_PATH }}

            echo "➡️  Bootstrap/Fetch code"
            if [ ! -d ".git" ]; then
              git init
              git remote add origin git@github.com:${{ github.repository }}.git
              git fetch origin main
              git checkout -t origin/main
            else
              git fetch origin main
              git checkout main
              git reset --hard origin/main
            fi

            echo "➡️  Composer (prod)"
            ${{ secrets.COMPOSER_BIN }} install --no-dev --prefer-dist --no-interaction --optimize-autoloader

            echo "➡️  Clear caches"
            ${{ secrets.PHP_CMD }} artisan config:clear || true
            ${{ secrets.PHP_CMD }} artisan route:clear || true
            ${{ secrets.PHP_CMD }} artisan view:clear || true

            echo "➡️  Rebuild caches"
            ${{ secrets.PHP_CMD }} artisan config:cache
            ${{ secrets.PHP_CMD }} artisan route:cache
            ${{ secrets.PHP_CMD }} artisan view:cache

            echo "➡️  Migrate DB"
            ${{ secrets.PHP_CMD }} artisan migrate --force

            echo "➡️  Storage & queues"
            ${{ secrets.PHP_CMD }} artisan storage:link || true
            ${{ secrets.PHP_CMD }} artisan queue:restart || true

            echo "➡️  Permissions"
            chgrp -R www-data storage bootstrap/cache || true
            chmod -R ug+rwx storage bootstrap/cache || true

            echo "✅ Done"
